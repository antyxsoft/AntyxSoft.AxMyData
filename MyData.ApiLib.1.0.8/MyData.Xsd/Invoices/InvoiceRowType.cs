//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// This code was generated by XmlSchemaClassGenerator version 2.1.1057.0
namespace MyData.Xsd
{
    using System;
    using System.CodeDom.Compiler;
    using System.Collections.Generic;
    using System.Collections.ObjectModel;
    using System.ComponentModel;
    using System.ComponentModel.DataAnnotations;
    using System.Diagnostics.CodeAnalysis;
    using System.Xml;
    using System.Xml.Schema;
    using System.Xml.Serialization;
    
    
    [GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.1.1057.0")]
    [SerializableAttribute()]
    [XmlTypeAttribute("InvoiceRowType", Namespace="http://www.aade.gr/myDATA/invoice/v1.0")]
    public partial class InvoiceRowType
    {
        
        /// <summary>
        /// <para>ΑΑ Γραμμής</para>
        /// <para xml:lang="en">Minimum inclusive value: 1.</para>
        /// </summary>
        [DescriptionAttribute("ΑΑ Γραμμής")]
        [RequiredAttribute()]
        [XmlElementAttribute("lineNumber")]
        public int lineNumber { get; set; }
        
        /// <summary>
        /// <para>Είδος Γραμμής</para>
        /// <para xml:lang="en">Minimum inclusive value: 1.</para>
        /// <para xml:lang="en">Maximum inclusive value: 7.</para>
        /// </summary>
        [DescriptionAttribute("Είδος Γραμμής")]
        [RangeAttribute(typeof(int), "1", "7")]
        [XmlElementAttribute("recType")]
        public int recType { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die recType-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the recType property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        public bool recTypeSpecified { get; set; }
        
        /// <summary>
        /// <para>Κωδικός Taric</para>
        /// <para xml:lang="en">Minimum length: 10.</para>
        /// <para xml:lang="en">Maximum length: 10.</para>
        /// </summary>
        [DescriptionAttribute("Κωδικός Taric")]
        [MinLengthAttribute(10)]
        [MaxLengthAttribute(10)]
        [AllowNullAttribute()]
        [MaybeNullAttribute()]
        [XmlElementAttribute("TaricNo")]
        public string TaricNo { get; set; }
        
        /// <summary>
        /// <para>Κωδικός Είδους</para>
        /// <para xml:lang="en">Maximum length: 50.</para>
        /// </summary>
        [DescriptionAttribute("Κωδικός Είδους")]
        [MaxLengthAttribute(50)]
        [AllowNullAttribute()]
        [MaybeNullAttribute()]
        [XmlElementAttribute("itemCode")]
        public string itemCode { get; set; }
        
        /// <summary>
        /// <para>Περιγραφή Είδους</para>
        /// <para xml:lang="en">Maximum length: 300.</para>
        /// </summary>
        [DescriptionAttribute("Περιγραφή Είδους")]
        [MaxLengthAttribute(300)]
        [AllowNullAttribute()]
        [MaybeNullAttribute()]
        [XmlElementAttribute("itemDescr")]
        public string itemDescr { get; set; }
        
        /// <summary>
        /// <para>Κωδικός Καυσίμου</para>
        /// </summary>
        [DescriptionAttribute("Κωδικός Καυσίμου")]
        [XmlElementAttribute("fuelCode")]
        public FuelCodes fuelCode { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die fuelCode-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the fuelCode property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        public bool fuelCodeSpecified { get; set; }
        
        /// <summary>
        /// <para>Ποσότητα</para>
        /// <para xml:lang="en">Minimum exclusive value: 0.</para>
        /// </summary>
        [DescriptionAttribute("Ποσότητα")]
        [XmlElementAttribute("quantity")]
        public decimal quantity { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die quantity-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the quantity property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        public bool quantitySpecified { get; set; }
        
        /// <summary>
        /// <para>Είδος Ποσότητας</para>
        /// <para xml:lang="en">Minimum inclusive value: 1.</para>
        /// <para xml:lang="en">Maximum inclusive value: 7.</para>
        /// </summary>
        [DescriptionAttribute("Είδος Ποσότητας")]
        [RangeAttribute(typeof(int), "1", "7")]
        [XmlElementAttribute("measurementUnit")]
        public int measurementUnit { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die measurementUnit-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the measurementUnit property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        public bool measurementUnitSpecified { get; set; }
        
        /// <summary>
        /// <para>Επισήμανση</para>
        /// <para xml:lang="en">Minimum inclusive value: 1.</para>
        /// <para xml:lang="en">Maximum inclusive value: 2.</para>
        /// </summary>
        [DescriptionAttribute("Επισήμανση")]
        [RangeAttribute(typeof(int), "1", "2")]
        [XmlElementAttribute("invoiceDetailType")]
        public int invoiceDetailType { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die invoiceDetailType-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the invoiceDetailType property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        public bool invoiceDetailTypeSpecified { get; set; }
        
        /// <summary>
        /// <para>Καθαρή Αξία</para>
        /// <para xml:lang="en">Total number of digits in fraction: 2.</para>
        /// <para xml:lang="en">Minimum inclusive value: 0.</para>
        /// <para xml:lang="en">Total number of digits: 15.</para>
        /// </summary>
        [DescriptionAttribute("Καθαρή Αξία")]
        [RequiredAttribute()]
        [XmlElementAttribute("netValue")]
        public decimal netValue { get; set; }
        
        /// <summary>
        /// <para>Κατηγορία ΦΠΑ</para>
        /// <para xml:lang="en">Minimum inclusive value: 1.</para>
        /// <para xml:lang="en">Maximum inclusive value: 9.</para>
        /// </summary>
        [DescriptionAttribute("Κατηγορία ΦΠΑ")]
        [RangeAttribute(typeof(int), "1", "9")]
        [RequiredAttribute()]
        [XmlElementAttribute("vatCategory")]
        public int vatCategory { get; set; }
        
        /// <summary>
        /// <para>Ποσό ΦΠΑ</para>
        /// <para xml:lang="en">Total number of digits in fraction: 2.</para>
        /// <para xml:lang="en">Minimum inclusive value: 0.</para>
        /// <para xml:lang="en">Total number of digits: 15.</para>
        /// </summary>
        [DescriptionAttribute("Ποσό ΦΠΑ")]
        [RequiredAttribute()]
        [XmlElementAttribute("vatAmount")]
        public decimal vatAmount { get; set; }
        
        /// <summary>
        /// <para>Κατηγορία Αιτίας Εξαίρεσης ΦΠΑ</para>
        /// <para xml:lang="en">Minimum inclusive value: 1.</para>
        /// <para xml:lang="en">Maximum inclusive value: 31.</para>
        /// </summary>
        [DescriptionAttribute("Κατηγορία Αιτίας Εξαίρεσης ΦΠΑ")]
        [RangeAttribute(typeof(int), "1", "31")]
        [XmlElementAttribute("vatExemptionCategory")]
        public int vatExemptionCategory { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die vatExemptionCategory-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the vatExemptionCategory property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        public bool vatExemptionCategorySpecified { get; set; }
        
        /// <summary>
        /// <para>ΠΟΛ 1177/2018 Αρ. 27</para>
        /// </summary>
        [DescriptionAttribute("ΠΟΛ 1177/2018 Αρ. 27")]
        [AllowNullAttribute()]
        [MaybeNullAttribute()]
        [XmlElementAttribute("dienergia")]
        public ShipType dienergia { get; set; }
        
        /// <summary>
        /// <para>Δικαίωμα Έκπτωσης</para>
        /// </summary>
        [DescriptionAttribute("Δικαίωμα Έκπτωσης")]
        [XmlElementAttribute("discountOption")]
        public bool discountOption { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die discountOption-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the discountOption property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        public bool discountOptionSpecified { get; set; }
        
        /// <summary>
        /// <para>Ποσό Παρ. Φόρου</para>
        /// <para xml:lang="en">Total number of digits in fraction: 2.</para>
        /// <para xml:lang="en">Minimum inclusive value: 0.</para>
        /// <para xml:lang="en">Total number of digits: 15.</para>
        /// </summary>
        [DescriptionAttribute("Ποσό Παρ. Φόρου")]
        [XmlElementAttribute("withheldAmount")]
        public decimal withheldAmount { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die withheldAmount-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the withheldAmount property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        public bool withheldAmountSpecified { get; set; }
        
        /// <summary>
        /// <para>Κατηγορία Συντελεστή  Παρ. Φόρου</para>
        /// <para xml:lang="en">Minimum inclusive value: 1.</para>
        /// <para xml:lang="en">Maximum inclusive value: 18.</para>
        /// </summary>
        [DescriptionAttribute("Κατηγορία Συντελεστή Παρ. Φόρου")]
        [RangeAttribute(typeof(int), "1", "18")]
        [XmlElementAttribute("withheldPercentCategory")]
        public int withheldPercentCategory { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die withheldPercentCategory-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the withheldPercentCategory property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        public bool withheldPercentCategorySpecified { get; set; }
        
        /// <summary>
        /// <para>Ποσό Χαρτοσήμου</para>
        /// <para xml:lang="en">Total number of digits in fraction: 2.</para>
        /// <para xml:lang="en">Minimum inclusive value: 0.</para>
        /// <para xml:lang="en">Total number of digits: 15.</para>
        /// </summary>
        [DescriptionAttribute("Ποσό Χαρτοσήμου")]
        [XmlElementAttribute("stampDutyAmount")]
        public decimal stampDutyAmount { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die stampDutyAmount-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the stampDutyAmount property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        public bool stampDutyAmountSpecified { get; set; }
        
        /// <summary>
        /// <para>Κατηγορία Συντελεστή  Χαρτοσήμου</para>
        /// <para xml:lang="en">Minimum inclusive value: 1.</para>
        /// <para xml:lang="en">Maximum inclusive value: 4.</para>
        /// </summary>
        [DescriptionAttribute("Κατηγορία Συντελεστή Χαρτοσήμου")]
        [RangeAttribute(typeof(int), "1", "4")]
        [XmlElementAttribute("stampDutyPercentCategory")]
        public int stampDutyPercentCategory { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die stampDutyPercentCategory-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the stampDutyPercentCategory property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        public bool stampDutyPercentCategorySpecified { get; set; }
        
        /// <summary>
        /// <para>Ποσό Τελών</para>
        /// <para xml:lang="en">Total number of digits in fraction: 2.</para>
        /// <para xml:lang="en">Minimum inclusive value: 0.</para>
        /// <para xml:lang="en">Total number of digits: 15.</para>
        /// </summary>
        [DescriptionAttribute("Ποσό Τελών")]
        [XmlElementAttribute("feesAmount")]
        public decimal feesAmount { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die feesAmount-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the feesAmount property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        public bool feesAmountSpecified { get; set; }
        
        /// <summary>
        /// <para>Κατηγορία Συντελεστή Τελών</para>
        /// <para xml:lang="en">Minimum inclusive value: 1.</para>
        /// <para xml:lang="en">Maximum inclusive value: 22.</para>
        /// </summary>
        [DescriptionAttribute("Κατηγορία Συντελεστή Τελών")]
        [RangeAttribute(typeof(int), "1", "22")]
        [XmlElementAttribute("feesPercentCategory")]
        public int feesPercentCategory { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die feesPercentCategory-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the feesPercentCategory property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        public bool feesPercentCategorySpecified { get; set; }
        
        /// <summary>
        /// <para>Κατηγορία Συντελεστή Λοιπών Φόρων</para>
        /// <para xml:lang="en">Minimum inclusive value: 1.</para>
        /// <para xml:lang="en">Maximum inclusive value: 19.</para>
        /// </summary>
        [DescriptionAttribute("Κατηγορία Συντελεστή Λοιπών Φόρων")]
        [RangeAttribute(typeof(int), "1", "19")]
        [XmlElementAttribute("otherTaxesPercentCategory")]
        public int otherTaxesPercentCategory { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die otherTaxesPercentCategory-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the otherTaxesPercentCategory property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        public bool otherTaxesPercentCategorySpecified { get; set; }
        
        /// <summary>
        /// <para>Ποσό Φόρου Διαμονης</para>
        /// <para xml:lang="en">Total number of digits in fraction: 2.</para>
        /// <para xml:lang="en">Minimum inclusive value: 0.</para>
        /// <para xml:lang="en">Total number of digits: 15.</para>
        /// </summary>
        [DescriptionAttribute("Ποσό Φόρου Διαμονης")]
        [XmlElementAttribute("otherTaxesAmount")]
        public decimal otherTaxesAmount { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die otherTaxesAmount-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the otherTaxesAmount property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        public bool otherTaxesAmountSpecified { get; set; }
        
        /// <summary>
        /// <para>Ποσό Κρατήσεων</para>
        /// <para xml:lang="en">Total number of digits in fraction: 2.</para>
        /// <para xml:lang="en">Minimum inclusive value: 0.</para>
        /// <para xml:lang="en">Total number of digits: 15.</para>
        /// </summary>
        [DescriptionAttribute("Ποσό Κρατήσεων")]
        [XmlElementAttribute("deductionsAmount")]
        public decimal deductionsAmount { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die deductionsAmount-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the deductionsAmount property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        public bool deductionsAmountSpecified { get; set; }
        
        /// <summary>
        /// <para>Σχόλια Γραμμής</para>
        /// <para>Σχόλια</para>
        /// <para xml:lang="en">Maximum length: 150.</para>
        /// </summary>
        [DescriptionAttribute("Σχόλια Γραμμής")]
        [MaxLengthAttribute(150)]
        [AllowNullAttribute()]
        [MaybeNullAttribute()]
        [XmlElementAttribute("lineComments")]
        public string lineComments { get; set; }
        
        [XmlIgnoreAttribute()]
        private List<MyData.Xsd.IncomeClassificationType> _incomeClassification;
        
        /// <summary>
        /// <para>Λίστα Χαρακτηρισμών Εσόδων</para>
        /// </summary>
        [DescriptionAttribute("Λίστα Χαρακτηρισμών Εσόδων")]
        [XmlElementAttribute("incomeClassification")]
        public List<MyData.Xsd.IncomeClassificationType> incomeClassification
        {
            get
            {
                return _incomeClassification;
            }
            set
            {
                _incomeClassification = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die incomeClassification-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the incomeClassification collection is empty.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        public bool incomeClassificationSpecified
        {
            get
            {
                return ((this.incomeClassification != null) 
                            && (this.incomeClassification.Count != 0));
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Initialisiert eine neue Instanz der <see cref="InvoiceRowType" /> Klasse.</para>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="InvoiceRowType" /> class.</para>
        /// </summary>
        public InvoiceRowType()
        {
            this._incomeClassification = new List<MyData.Xsd.IncomeClassificationType>();
            this._expensesClassification = new List<MyData.Xsd.ExpensesClassificationType>();
        }
        
        [XmlIgnoreAttribute()]
        private List<MyData.Xsd.ExpensesClassificationType> _expensesClassification;
        
        /// <summary>
        /// <para>Λίστα Χαρακτηρισμού Εξόδων</para>
        /// </summary>
        [DescriptionAttribute("Λίστα Χαρακτηρισμού Εξόδων")]
        [XmlElementAttribute("expensesClassification")]
        public List<MyData.Xsd.ExpensesClassificationType> expensesClassification
        {
            get
            {
                return _expensesClassification;
            }
            set
            {
                _expensesClassification = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die expensesClassification-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the expensesClassification collection is empty.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        public bool expensesClassificationSpecified
        {
            get
            {
                return ((this.expensesClassification != null) 
                            && (this.expensesClassification.Count != 0));
            }
        }
        
        /// <summary>
        /// <para>Ποσότητα Θερμοκρασίας 15 βαθμών</para>
        /// <para xml:lang="en">Minimum exclusive value: 0.</para>
        /// </summary>
        [DescriptionAttribute("Ποσότητα Θερμοκρασίας 15 βαθμών")]
        [XmlElementAttribute("quantity15")]
        public decimal quantity15 { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die quantity15-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the quantity15 property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        public bool quantity15Specified { get; set; }
        
        /// <summary>
        /// <para>Πλήθος Μονάδας Μέτρησης Τεμάχια Άλλα</para>
        /// </summary>
        [DescriptionAttribute("Πλήθος Μονάδας Μέτρησης Τεμάχια Άλλα")]
        [XmlElementAttribute("otherMeasurementUnitQuantity")]
        public int otherMeasurementUnitQuantity { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die otherMeasurementUnitQuantity-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the otherMeasurementUnitQuantity property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        public bool otherMeasurementUnitQuantitySpecified { get; set; }
        
        /// <summary>
        /// <para>Τίτλος Μονάδας Μέτρησης Τεμάχια Άλλα</para>
        /// <para xml:lang="en">Maximum length: 150.</para>
        /// </summary>
        [DescriptionAttribute("Τίτλος Μονάδας Μέτρησης Τεμάχια Άλλα")]
        [MaxLengthAttribute(150)]
        [AllowNullAttribute()]
        [MaybeNullAttribute()]
        [XmlElementAttribute("otherMeasurementUnitTitle")]
        public string otherMeasurementUnitTitle { get; set; }
    }
}
