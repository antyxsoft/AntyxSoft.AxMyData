//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// This code was generated by XmlSchemaClassGenerator version 2.1.1057.0
namespace MyData.Xsd
{
    using System;
    using System.CodeDom.Compiler;
    using System.Collections.Generic;
    using System.Collections.ObjectModel;
    using System.ComponentModel;
    using System.ComponentModel.DataAnnotations;
    using System.Diagnostics.CodeAnalysis;
    using System.Xml;
    using System.Xml.Schema;
    using System.Xml.Serialization;
    
    
    [GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.1.1057.0")]
    [SerializableAttribute()]
    [XmlTypeAttribute("InvoiceSummaryType", Namespace="http://www.aade.gr/myDATA/invoice/v1.0")]
    public partial class InvoiceSummaryType
    {
        
        /// <summary>
        /// <para>Σύνολο Καθαρής Αξίας</para>
        /// <para xml:lang="en">Total number of digits in fraction: 2.</para>
        /// <para xml:lang="en">Minimum inclusive value: 0.</para>
        /// <para xml:lang="en">Total number of digits: 15.</para>
        /// </summary>
        [DescriptionAttribute("Σύνολο Καθαρής Αξίας")]
        [RequiredAttribute()]
        [XmlElementAttribute("totalNetValue")]
        public decimal totalNetValue { get; set; }
        
        /// <summary>
        /// <para>Σύνολο ΦΠΑ</para>
        /// <para xml:lang="en">Total number of digits in fraction: 2.</para>
        /// <para xml:lang="en">Minimum inclusive value: 0.</para>
        /// <para xml:lang="en">Total number of digits: 15.</para>
        /// </summary>
        [DescriptionAttribute("Σύνολο ΦΠΑ")]
        [RequiredAttribute()]
        [XmlElementAttribute("totalVatAmount")]
        public decimal totalVatAmount { get; set; }
        
        /// <summary>
        /// <para>Σύνολο Παρ. Φόρων</para>
        /// <para xml:lang="en">Total number of digits in fraction: 2.</para>
        /// <para xml:lang="en">Minimum inclusive value: 0.</para>
        /// <para xml:lang="en">Total number of digits: 15.</para>
        /// </summary>
        [DescriptionAttribute("Σύνολο Παρ. Φόρων")]
        [RequiredAttribute()]
        [XmlElementAttribute("totalWithheldAmount")]
        public decimal totalWithheldAmount { get; set; }
        
        /// <summary>
        /// <para>Σύνολο Τελών</para>
        /// <para xml:lang="en">Total number of digits in fraction: 2.</para>
        /// <para xml:lang="en">Minimum inclusive value: 0.</para>
        /// <para xml:lang="en">Total number of digits: 15.</para>
        /// </summary>
        [DescriptionAttribute("Σύνολο Τελών")]
        [RequiredAttribute()]
        [XmlElementAttribute("totalFeesAmount")]
        public decimal totalFeesAmount { get; set; }
        
        /// <summary>
        /// <para>Σύνολο Χαρτοσήμου</para>
        /// <para xml:lang="en">Total number of digits in fraction: 2.</para>
        /// <para xml:lang="en">Minimum inclusive value: 0.</para>
        /// <para xml:lang="en">Total number of digits: 15.</para>
        /// </summary>
        [DescriptionAttribute("Σύνολο Χαρτοσήμου")]
        [RequiredAttribute()]
        [XmlElementAttribute("totalStampDutyAmount")]
        public decimal totalStampDutyAmount { get; set; }
        
        /// <summary>
        /// <para>Σύνολο Λοιπών Φόρων</para>
        /// <para xml:lang="en">Total number of digits in fraction: 2.</para>
        /// <para xml:lang="en">Minimum inclusive value: 0.</para>
        /// <para xml:lang="en">Total number of digits: 15.</para>
        /// </summary>
        [DescriptionAttribute("Σύνολο Λοιπών Φόρων")]
        [RequiredAttribute()]
        [XmlElementAttribute("totalOtherTaxesAmount")]
        public decimal totalOtherTaxesAmount { get; set; }
        
        /// <summary>
        /// <para>Σύνολο Κρατήσεων</para>
        /// <para xml:lang="en">Total number of digits in fraction: 2.</para>
        /// <para xml:lang="en">Minimum inclusive value: 0.</para>
        /// <para xml:lang="en">Total number of digits: 15.</para>
        /// </summary>
        [DescriptionAttribute("Σύνολο Κρατήσεων")]
        [RequiredAttribute()]
        [XmlElementAttribute("totalDeductionsAmount")]
        public decimal totalDeductionsAmount { get; set; }
        
        /// <summary>
        /// <para>Συνολική Αξία</para>
        /// <para xml:lang="en">Total number of digits in fraction: 2.</para>
        /// <para xml:lang="en">Minimum inclusive value: 0.</para>
        /// <para xml:lang="en">Total number of digits: 15.</para>
        /// </summary>
        [DescriptionAttribute("Συνολική Αξία")]
        [RequiredAttribute()]
        [XmlElementAttribute("totalGrossValue")]
        public decimal totalGrossValue { get; set; }
        
        [XmlIgnoreAttribute()]
        private List<MyData.Xsd.IncomeClassificationType> _incomeClassification;
        
        /// <summary>
        /// <para>Λίστα Χαρακτηρισμών Εσόδων</para>
        /// </summary>
        [DescriptionAttribute("Λίστα Χαρακτηρισμών Εσόδων")]
        [XmlElementAttribute("incomeClassification")]
        public List<MyData.Xsd.IncomeClassificationType> incomeClassification
        {
            get
            {
                return _incomeClassification;
            }
            set
            {
                _incomeClassification = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die incomeClassification-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the incomeClassification collection is empty.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        public bool incomeClassificationSpecified
        {
            get
            {
                return ((this.incomeClassification != null) 
                            && (this.incomeClassification.Count != 0));
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Initialisiert eine neue Instanz der <see cref="InvoiceSummaryType" /> Klasse.</para>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="InvoiceSummaryType" /> class.</para>
        /// </summary>
        public InvoiceSummaryType()
        {
            this._incomeClassification = new List<MyData.Xsd.IncomeClassificationType>();
            this._expensesClassification = new List<MyData.Xsd.ExpensesClassificationType>();
        }
        
        [XmlIgnoreAttribute()]
        private List<MyData.Xsd.ExpensesClassificationType> _expensesClassification;
        
        [XmlElementAttribute("expensesClassification")]
        public List<MyData.Xsd.ExpensesClassificationType> expensesClassification
        {
            get
            {
                return _expensesClassification;
            }
            set
            {
                _expensesClassification = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die expensesClassification-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the expensesClassification collection is empty.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        public bool expensesClassificationSpecified
        {
            get
            {
                return ((this.expensesClassification != null) 
                            && (this.expensesClassification.Count != 0));
            }
        }
    }
}
